variables:
  GITLAB_ENV: test
  CICD: $USE_CICD
  USER: $DEPLOY_USER

default:
  tags:
    - shell

stages:
  - test
  - deploy
  - clean

# ~~~~~~~~~~~~~~~~~~~~~~~~

include:
  - project: fairdata/fairdata-ci
    ref: master
    file:
      - /templates/deploy.yml
    rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
    - if: $CI_PIPELINE_SOURCE =~ /^(web)$/

deploy-feature-to-staging:
  stage: deploy
  environment: staging
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $DEPLOY_PLAYBOOK -e repo_version=${CI_COMMIT_REF_NAME} --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: $CI_PIPELINE_SOURCE !~ /^(web)$/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME !~ /^(master|release)$/

# ~~~~~~~~~~~~~~~~~~~~~~~~

sonarqube:
  tags:
    - docker
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      allow_failure: true
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/ && $CI_PIPELINE_SOURCE !~ /^(web)$/
      allow_failure: true
    - if: $CI_COMMIT_BRANCH =~ /^(release)$/

test:
  stage: test
  script:
      - python3.8 -m virtualenv venv
      - source venv/bin/activate
      - pip install -r requirements.txt
      - sudo mkdir -p /var/log/etsin_finder_search
      - sudo chown -R $USER:$USER /var/log/etsin_finder_search
      - flake8 .
      - pytest --cov=etsin_finder_search tests/
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/ && $CI_PIPELINE_SOURCE !~ /^(web)$/

# ~~~~~~~~~~~~~~~~~~~~~~~~

clean-feature:
  stage: clean
  environment:
    name: staging
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $DELETE_PLAYBOOK -e repo_version=$CI_COMMIT_REF_NAME --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME !~ /^(master|release)$/
      when: manual

clean:
  stage: clean
  environment: $GITLAB_ENV
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $DELETE_PLAYBOOK -e "build_id=${CI_COMMIT_BEFORE_SHA:0:8}" --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
      when: manual
